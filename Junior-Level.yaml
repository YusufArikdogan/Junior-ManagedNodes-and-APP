- name: install docker and config
  hosts: _development_1
  become: true
  tasks:
    - name: update all packages
      ansible.builtin.yum:
        name: '*'
        state: latest

    
    # we may need to uninstall any existing docker files from the centos repo first.
    - name: Remove docker if installed from CentOS repo
      ansible.builtin.yum:
        name:
          - docker
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed

    - name: Install yum utils
      ansible.builtin.yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - unzip


    - name: Install Docker
      ansible.builtin.yum:
        name: docker
        state: latest

    - name: Add user ec2-user to docker group
      ansible.builtin.user:
        name: ec2-user
        groups: docker
        append: yes

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes 
- name: PostgreSQL Database Configuration
  hosts: _ansible_postgresql
  become: true
  vars:
    container_name: postgre
    image_name: insaniso/postgre:latest
  tasks:
    - name: Remove PostgreSQL container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: true

    - name: Remove PostgreSQL image
      community.docker.docker_image:
        name: "{{ image_name }}"
        state: absent

    - name: Launch PostgreSQL Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ image_name }}"
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "Pp123456789"
        volumes:
          - /db-data:/var/lib/postgresql/data

- name: Node.js Server Configuration
  hosts: _ansible_nodejs
  become: true
  vars:
    container_name: nodejs
    image_name: insaniso/nodejs:latest
  tasks:
    - name: Remove Node.js container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: true

    - name: Remove Node.js image
      community.docker.docker_image:
        name: "{{ image_name }}"
        state: absent

    - name: Launch Node.js Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ image_name }}"
        state: started
        ports:
          - "5000:5000"

- name: React UI Server Configuration
  hosts: _ansible_react
  become: true
  vars:
    container_name: react
    image_name: insaniso/react:latest
  tasks:
    - name: Remove React container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
        force_kill: true

    - name: Remove React image
      community.docker.docker_image:
        name: "{{ image_name }}"
        state: absent

    - name: Launch React Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ image_name }}"
        state: started
        ports:  
          - "3000:80"
